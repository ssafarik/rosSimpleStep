/* Auto-generated by genmsg_cpp for file /home/sweta/src.git/rosSimpleStep/srv/SrvSetZero.srv */
#ifndef ROSSIMPLESTEP_SERVICE_SRVSETZERO_H
#define ROSSIMPLESTEP_SERVICE_SRVSETZERO_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace rosSimpleStep
{
template <class ContainerAllocator>
struct SrvSetZeroRequest_ {
  typedef SrvSetZeroRequest_<ContainerAllocator> Type;

  SrvSetZeroRequest_()
  : pos(0.0)
  {
  }

  SrvSetZeroRequest_(const ContainerAllocator& _alloc)
  : pos(0.0)
  {
  }

  typedef double _pos_type;
  double pos;


  typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SrvSetZeroRequest
typedef  ::rosSimpleStep::SrvSetZeroRequest_<std::allocator<void> > SrvSetZeroRequest;

typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroRequest> SrvSetZeroRequestPtr;
typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroRequest const> SrvSetZeroRequestConstPtr;


template <class ContainerAllocator>
struct SrvSetZeroResponse_ {
  typedef SrvSetZeroResponse_<ContainerAllocator> Type;

  SrvSetZeroResponse_()
  : bStatus(false)
  {
  }

  SrvSetZeroResponse_(const ContainerAllocator& _alloc)
  : bStatus(false)
  {
  }

  typedef uint8_t _bStatus_type;
  uint8_t bStatus;


  typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SrvSetZeroResponse
typedef  ::rosSimpleStep::SrvSetZeroResponse_<std::allocator<void> > SrvSetZeroResponse;

typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroResponse> SrvSetZeroResponsePtr;
typedef boost::shared_ptr< ::rosSimpleStep::SrvSetZeroResponse const> SrvSetZeroResponseConstPtr;

struct SrvSetZero
{

typedef SrvSetZeroRequest Request;
typedef SrvSetZeroResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SrvSetZero
} // namespace rosSimpleStep

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dbf6546e7fe3735fd3cf39bc063251a4";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdbf6546e7fe3735fULL;
  static const uint64_t static_value2 = 0xd3cf39bc063251a4ULL;
};

template<class ContainerAllocator>
struct DataType< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rosSimpleStep/SrvSetZeroRequest";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 pos\n\
\n\
";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3e18d87dd8087d83731a8e3c5780564e";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3e18d87dd8087d83ULL;
  static const uint64_t static_value2 = 0x731a8e3c5780564eULL;
};

template<class ContainerAllocator>
struct DataType< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rosSimpleStep/SrvSetZeroResponse";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool bStatus\n\
\n\
\n\
";
  }

  static const char* value(const  ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.pos);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SrvSetZeroRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.bStatus);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SrvSetZeroResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<rosSimpleStep::SrvSetZero> {
  static const char* value() 
  {
    return "601132c60d9f2166de4fd581d485cb38";
  }

  static const char* value(const rosSimpleStep::SrvSetZero&) { return value(); } 
};

template<>
struct DataType<rosSimpleStep::SrvSetZero> {
  static const char* value() 
  {
    return "rosSimpleStep/SrvSetZero";
  }

  static const char* value(const rosSimpleStep::SrvSetZero&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "601132c60d9f2166de4fd581d485cb38";
  }

  static const char* value(const rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rosSimpleStep/SrvSetZero";
  }

  static const char* value(const rosSimpleStep::SrvSetZeroRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "601132c60d9f2166de4fd581d485cb38";
  }

  static const char* value(const rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rosSimpleStep/SrvSetZero";
  }

  static const char* value(const rosSimpleStep::SrvSetZeroResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROSSIMPLESTEP_SERVICE_SRVSETZERO_H

